# vim: et:sw=2:ts=2
---
resources:
  - name: search-api
    type: git
    source:
      uri: git@github.com:pebblecode/cirrus-marketplace-search-api
      branch: master
      private_key: {{github_deploy_key}}
  - name: version
    type: semver
    source:
      bucket: inoket-build-artifacts
      region_name: eu-west-1
      access_key_id: {{semver_bucket_access_key_id}}
      secret_access_key: {{semver_bucket_secret_access_key}}
      key: search-api/current-version
      initial_version: 1.0.0
  - name: release-artifacts
    type: s3
    source:
      bucket: inoket-build-artifacts
      regexp: search-api/rc-(.*).zip
      access_key_id: {{semver_bucket_access_key_id}}
      secret_access_key: {{semver_bucket_secret_access_key}}
      region_name: eu-west-1
      private: true
  - name: dev-env-artifacts
    type: s3
    source:
      bucket: dev-inoket-deploy-artifacts
      regexp: search-api/rc-(.*).zip
      access_key_id: {{dev_access_key_id}}
      secret_access_key: {{dev_secret_access_key}}
      region_name: eu-west-1
      private: true
jobs:
  - name: build-rc
    serial_groups: [version]
    plan:
      - get: version
        params:
          pre: rc
      - get: search-api
        trigger: true
      - task: install-python-dependencies
        file: search-api/ci/build_app.yml
        input_mapping: {code: search-api}
      - task: bundle
        file: search-api/ci/bundle.yml
      - put: release-artifacts
        params: {file: bundle/rc-*.zip}
      - put: version
        params: {file: version/number}
  - name: upload-rc
    plan:
      - get: release-artifacts
        trigger: true
        passed: [build-rc]
      - put: dev-env-artifacts
        params: {file: release-artifacts/rc-*.zip}
  - name: deploy-beanstalk
    serial: true
    serial_groups: [version]
    passed: [upload-rc]
    plan:
      - get: dev-env-artifacts
        passed: [upload-rc]
        trigger: true
      - get: version
        passed: [build-rc]
      - task: create-beanstalk-application-version
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: python
              tag: "2.7"
          inputs:
            - name: version
          run:
            path: sh
            args:
              - -ec
              - |
                pip install awscli
                set +x
                VERSION=$(cat version/number)
                AWS_ACCESS_KEY_ID={{dev_access_key_id}}
                AWS_SECRET_ACCESS_KEY={{dev_secret_access_key}}
                export AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY
                set -x
                VERSION_LABEL="rc-${VERSION}"
                aws elasticbeanstalk create-application-version --region=eu-west-1 --application-name dev-searchapi --version-label $VERSION_LABEL --source-bundle S3Bucket=dev-inoket-deploy-artifacts,S3Key="search-api/rc-${VERSION}.zip" || true
                aws elasticbeanstalk update-environment --region=eu-west-1 --application-name dev-searchapi --environment-name dev-search --version-label $VERSION_LABEL

